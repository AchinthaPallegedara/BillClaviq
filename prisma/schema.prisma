datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  id          String     @id @default(uuid()) @map("_id")
  clerkId     String
  name        String
  phoneNumber String?    @unique
  address     String?
  logo        String?
  Invoice     Invoice[]
  Customers   Customer[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Customer {
  id               String    @id @default(uuid()) @map("_id")
  customerName     String
  companyName      String?
  customerPhone    String    @unique
  customerAddress  String?
  customerEmail    String?
  customerMoreInfo String?
  invoice          Invoice[]
  customerOf       Company   @relation(fields: [customerOfId], references: [id], onDelete: Cascade)
  customerOfId     String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Invoice {
  id            String        @id @default(uuid()) @map("_id")
  invoiceNumber String        @unique
  issueDate     DateTime
  dueDate       DateTime?
  status        InvoiceStatus @default(DRAFT)
  Items         Items[]
  discount      Float?        @default(0.00)
  tax           Float?        @default(0.00)
  subtotal      Float
  total         Float
  to            Customer      @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId    String
  from          Company       @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId     String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Items {
  id          String  @id @default(uuid()) @map("_id")
  description String?
  quantity    Int     @default(1)
  price       Float
  Invoice     Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  invoiceId   String
}

enum InvoiceStatus {
  DRAFT
  PAID
  OVERDUE
  PENDING
}
